import React, { useState, useEffect } from 'react';
import useApi from '../hooks/useApi';
import { Card, CardHeader, CardContent } from '../components/ui/Card';
import Skeleton from '../components/ui/Skeleton';
import EmptyState from '../components/ui/EmptyState';
import Meta from '../lib/seo';

interface EntitlementItem {
    itemCode: string;
}

const MyEntitlements: React.FC = () => {
    const { fetchWithErrorHandler } = useApi();
    const [entitlements, setEntitlements] = useState<EntitlementItem[]>([]);
    const [isLoading, setIsLoading] = useState<boolean>(true);
    const [error, setError] = useState<string>('');

    useEffect(() => {
        const fetchEntitlements = async () => {
            setIsLoading(true);
            try {
                const data = await fetchWithErrorHandler<EntitlementItem[]>(
                    'http://localhost:8080/api/entitlements/me',
                    {
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem('jwtToken')}`,
                        },
                    }
                );
                setEntitlements(data);
            } catch (err) {
                setError(err instanceof Error ? err.message : String(err));
            } finally {
                setIsLoading(false);
            }
        };
        fetchEntitlements();
    }, [fetchWithErrorHandler]);

    if (isLoading) {
        return (
            <div className="p-4">
                <h1 className="text-2xl font-bold mb-4">ÎÇ¥ Í∂åÌïú</h1>
                <Card>
                    <CardContent>
                        <Skeleton className="h-6 w-1/2 mb-2" />
                        <Skeleton className="h-4 w-full" />
                    </CardContent>
                </Card>
            );
        }

    if (error) {
        return (
            <EmptyState
                title="Í∂åÌïú Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§."
                description={error}
                icon="‚ö†Ô∏è"
            />
        );
    }

    if (entitlements.length === 0) {
        return (
            <EmptyState
                title="Î≥¥Ïú†Ìïú Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§."
                description="Í≥†Ìï¥ÏÉÅÎèÑ Îã§Ïö¥Î°úÎìúÏôÄ Í∞ôÏùÄ Ïú†Î£å Í∏∞Îä•ÏùÑ Íµ¨Îß§Ìï¥Î≥¥ÏÑ∏Ïöî."
                icon="üéÅ"
            />
        );
    }

    return (
        <>
            <Meta title="ÎÇ¥ Í∂åÌïú ‚Äî find-me" description="find-me ÏÑúÎπÑÏä§ÏóêÏÑú Î≥¥Ïú†ÌïòÍ≥† ÏûàÎäî Í∂åÌïú Î™©Î°ùÏûÖÎãàÎã§." />
            <div className="p-4">
                <h1 className="text-2xl font-bold mb-4">ÎÇ¥ Í∂åÌïú</h1>
                <div className="flex flex-col gap-4">
                    {entitlements.map((entitlement, index) => (
                        <Card key={index}>
                            <CardContent>
                                <h3 className="text-lg font-semibold">{entitlement.itemCode}</h3>
                                <p className="text-muted-foreground">ÏòÅÍµ¨ Í∂åÌïú</p>
                            </CardContent>
                        </Card>
                    ))}
                </div>
            </div>
        </>
    );
};

export default MyEntitlements;
